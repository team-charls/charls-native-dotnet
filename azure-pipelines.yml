# Copyright (c) Team CharLS.
# SPDX-License-Identifier: BSD-3-Clause

variables:
  solution: '*.sln'
  buildPlatform: 'Any CPU'

jobs:
- job: 'windows'
  pool:
    vmImage: 'windows-latest'
  displayName: 'Windows - '

  strategy:
    matrix:
      Debug:
        buildConfiguration: 'Debug'
      Release:
        buildConfiguration: 'Release'

  steps:
  - checkout: self
    submodules: true
    fetchDepth: 1

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      feedsToUse: config
      nugetConfigPath: nuget.config
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      otherConsoleOptions: --Framework:".NETCoreApp,Version=v6.0"
      testAssemblyVer2: |
        **\CharLS.Native.Test.dll
        !**\*TestAdapter.dll
        !**\intermediates\**
      runInParallel: true
      codeCoverageEnabled: true


- job: 'linux'
  pool:
    vmImage: ubuntu-latest
  displayName: 'Linux - '

  strategy:
    matrix:
      Debug:
        buildConfiguration: Debug

      Release:
        buildConfiguration: Release

  steps:
  - checkout: self
    submodules: true
    fetchDepth: 1
  - task: NuGetToolInstaller@1

  - script: mkdir $(Build.BinariesDirectory)/build
    displayName: "Create build folder"

  - task: CMake@1
    displayName: "Configure C++ CharLS"
    inputs:
      workingDirectory: $(Build.BinariesDirectory)/build
      cmakeArgs:
        -DCMAKE_BUILD_TYPE=Release
        -DBUILD_SHARED_LIBS=On
        -DCHARLS_PEDANTIC_WARNINGS=On
        -DCHARLS_TREAT_WARNING_AS_ERROR=On
        -DCHARLS_BUILD_TESTS=Off
        -DCHARLS_BUILD_FUZZ_TEST=Off
        -DCHARLS_BUILD_SAMPLES=Off
        $(Build.SourcesDirectory)/extern/charls

  - task: CMake@1
    displayName: "Build C++ CharLS"
    inputs:
      workingDirectory: $(Build.BinariesDirectory)/build
      cmakeArgs: --build .

  - task: UseDotNet@2
    displayName: 'Install .NET 6.0 SDK'
    inputs:
      version: 6.0.x

  - task: UseDotNet@2
    displayName: 'Install .NET 7.0 SDK'
    inputs:
      version: 7.0.x

  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'

  - task: DotNetCoreCLI@2
    displayName: 'Build Charls.Native'
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration) --no-restore'
      platform: '$(buildPlatform)'

  - script: cp $(Build.BinariesDirectory)/build/libcharls.so.2 $(Build.SourcesDirectory)/build/bin/$(buildConfiguration)/net6.0/
    displayName: "Copy shared library to .NET 6.0 unit test location"

  - script: cp $(Build.BinariesDirectory)/build/libcharls.so.2 $(Build.SourcesDirectory)/build/bin/$(buildConfiguration)/net7.0/
    displayName: "Copy shared library to .NET 7.0 unit test location"

  - task: DotNetCoreCLI@2
    displayName: 'Test Charls.Native'
    inputs:
      command: 'test'
      projects: '**/*tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'


- job: 'macOS'
  pool:
    vmImage: macOS-latest
  displayName: 'macOS - '

  strategy:
    matrix:
      Debug:
        buildConfiguration: Debug

      Release:
        buildConfiguration: Release

  steps:
  - checkout: self
    submodules: true
    fetchDepth: 1
  - task: NuGetToolInstaller@1

  - script: mkdir $(Build.BinariesDirectory)/build
    displayName: "Create build folder"

  - task: CMake@1
    displayName: "Configure C++ CharLS"
    inputs:
      workingDirectory: $(Build.BinariesDirectory)/build
      cmakeArgs:
        -DCMAKE_BUILD_TYPE=Release
        -DBUILD_SHARED_LIBS=On
        -DCHARLS_PEDANTIC_WARNINGS=On
        -DCHARLS_TREAT_WARNING_AS_ERROR=On
        -DCHARLS_BUILD_TESTS=Off
        -DCHARLS_BUILD_FUZZ_TEST=Off
        -DCHARLS_BUILD_SAMPLES=Off
        $(Build.SourcesDirectory)/extern/charls

  - task: CMake@1
    displayName: "Build C++ CharLS"
    inputs:
      workingDirectory: $(Build.BinariesDirectory)/build
      cmakeArgs: --build .

  - task: UseDotNet@2
    displayName: 'Install .NET 6.0 SDK'
    inputs:
      version: 6.0.x

  - task: UseDotNet@2
    displayName: 'Install .NET 7.0 SDK'
    inputs:
      version: 7.0.x

  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'

  - task: DotNetCoreCLI@2
    displayName: 'Build Charls.Native'
    inputs:
      command: 'build'
      arguments: '--configuration $(buildConfiguration) --no-restore'
      platform: '$(buildPlatform)'

  - script: cp $(Build.BinariesDirectory)/build/libcharls.2.dylib $(Build.SourcesDirectory)/build/bin/$(buildConfiguration)/net6.0/
    displayName: "Copy shared library to .NET 6.0 unit test location"

  - script: cp $(Build.BinariesDirectory)/build/libcharls.2.dylib $(Build.SourcesDirectory)/build/bin/$(buildConfiguration)/net7.0/
    displayName: "Copy shared library to .NET 7.0 unit test location"

  - task: DotNetCoreCLI@2
    displayName: 'Test Charls.Native'
    inputs:
      command: 'test'
      projects: '**/*tests/*.csproj'
      arguments: '--configuration $(buildConfiguration) --no-restore'
